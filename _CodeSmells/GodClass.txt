junit.tests.ProblemTester	[junit.tests.ProblemTester::data.submission.Introduction subintroduction, junit.tests.ProblemTester::data.submission.MainInformation submainInformation, junit.tests.ProblemTester::data.submission.Inputs subinputs, junit.tests.ProblemTester::data.submission.FitnessApp subfitnessApp, junit.tests.ProblemTester::data.submission.Optimization suboptimization, junit.tests.ProblemTester::data.submission.Feedback subfeedback, junit.tests.ProblemTester::data.submission.Faqs subfaqs, junit.tests.ProblemTester::submission():void, junit.tests.ProblemTester::submissionSolo():void]
junit.tests.ProblemTester	[junit.tests.ProblemTester::data.problem.ProblemIntroduction introduction, junit.tests.ProblemTester::data.problem.ProblemOptimization optimization, junit.tests.ProblemTester::data.problem.ProblemInputs inputs, junit.tests.ProblemTester::problemInputsSolo():void, junit.tests.ProblemTester::data.problem.ProblemFitnessApp fitnessApp, junit.tests.ProblemTester::fitnessAppSolo():void, junit.tests.ProblemTester::problem():void]
data.problem.Configuration	[data.problem.Configuration::double upperLimit, data.problem.Configuration::double lowerLimit, data.problem.Configuration::setLimits(double, double):void]
data.jmetal.Experiments	[data.jmetal.Experiments::int algorithmsSelected, data.jmetal.Experiments::configureBinaryAlgorithmList(java.util.List<org.uma.jmetal.util.experiment.util.ExperimentProblem<org.uma.jmetal.solution.BinarySolution>>, java.util.ArrayList<utilities.Algorithm>):java.util.List<org.uma.jmetal.util.experiment.util.ExperimentAlgorithm<org.uma.jmetal.solution.BinarySolution,java.util.List<org.uma.jmetal.solution.BinarySolution>>>, data.jmetal.Experiments::configureDoubleAlgorithmList(java.util.List<org.uma.jmetal.util.experiment.util.ExperimentProblem<org.uma.jmetal.solution.DoubleSolution>>, java.util.ArrayList<utilities.Algorithm>):java.util.List<org.uma.jmetal.util.experiment.util.ExperimentAlgorithm<org.uma.jmetal.solution.DoubleSolution,java.util.List<org.uma.jmetal.solution.DoubleSolution>>>, data.jmetal.Experiments::configureIntegerAlgorithmList(java.util.List<org.uma.jmetal.util.experiment.util.ExperimentProblem<org.uma.jmetal.solution.IntegerSolution>>, java.util.ArrayList<utilities.Algorithm>):java.util.List<org.uma.jmetal.util.experiment.util.ExperimentAlgorithm<org.uma.jmetal.solution.IntegerSolution,java.util.List<org.uma.jmetal.solution.IntegerSolution>>>, data.jmetal.Experiments::getTotalConfigurations():int]
data.jmetal.Experiments	[data.jmetal.Experiments::org.uma.jmetal.util.experiment.Experiment<org.uma.jmetal.solution.BinarySolution,java.util.List<org.uma.jmetal.solution.BinarySolution>> binaryExperiment, data.jmetal.Experiments::org.uma.jmetal.util.experiment.Experiment<org.uma.jmetal.solution.DoubleSolution,java.util.List<org.uma.jmetal.solution.DoubleSolution>> doubleExperiment, data.jmetal.Experiments::org.uma.jmetal.util.experiment.Experiment<org.uma.jmetal.solution.IntegerSolution,java.util.List<org.uma.jmetal.solution.IntegerSolution>> integerExperiment, data.jmetal.Experiments::start():void, data.jmetal.Experiments::boolean successful]
main.Engine	[main.Engine::java.util.concurrent.BlockingQueue<data.problem.Problem> problemQueue, main.Engine::addProblemToQueue(data.submission.Submission):void, main.Engine::getStatus():java.lang.String]
